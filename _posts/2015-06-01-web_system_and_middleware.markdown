---
author: 邹政华
comments: true
date: 2015-06-01
published: false 
tags: 架构
layout: post
title: 大型网站系统与Java中间件－集群的Session问题
categories: 读书 
---

###Session Sticky

解释：Web服务器变成多台以后，如果保证同一个会话的请求都在同一个Web服务器上处理，那么对这个会话的个体来说，与之前单机的情况是一样的。

缺点：

* 如果有一台Web服务器宕机或者重启，那么这台机器上的会话数据会丢失

* 会话标识是应用层的信息，那么负载均衡器要将同一个会话的请求都保存到同一个Web服务器上的话，就需要进行应用层（第七层）解析，开销比第四层要大

* 负载均衡器变为有状态的节点，内存消耗会更大，容灾会更麻烦


###Session Replication

解释：在不同的服务器上同步Session数据，可以不考虑负载均衡

缺点：

* 造成了网络带宽的开销

* 集群规模很大的话，每台机器用于保存Session数据内容占用会很严重。

###Session数据集中存储

解释：Session数据不保存在本级，放在另一个地方集中存储（比方说memcache或者redis）

缺点：

* 读写Session引入网络操作

* 如果集中存储Session的机器或者集群有问题，就会影响我们的应用

###Cookie Based

解释：将Session数据放在Cookie中，然后在Web服务器上从Cookie中生成对应的Session数据。

缺点：

* Cookie长度的限制

* 安全性：Session数据本来是服务器端数据，放在外部网络及客户端，存在安全性上的问题。

* 带宽消耗，这里的带宽指的是数据中心的整体外部带宽消耗

* 性能影响，对Web服务器来说，在同样的处理情况下，响应的结果输出少，支持的并发请求就会越多。




