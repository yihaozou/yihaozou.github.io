---
author: 邹政华
comments: true
date: 2014-10-06 16:05:08+00:00
layout: post
published: false 
slug: '%e6%b5%8b%e9%87%8f%e4%b8%8a%e4%b8%8b%e6%96%87%e5%88%87%e6%8d%a2%e6%97%b6%e9%97%b4'
title: 测量上下文切换时间
wordpress_id: 535
categories: 编程
---

上下文切换（context switch）是指两个进程之间切换所耗费的时间，这样的动作会发生在多任务处理系统中。为测量上下文切换时间，我们可以记录两个切换进程执行最后一条（待切换进程）和第一条指令（切换后的进程）的时间戳，而上下文切换时间就是这两个进程的时间戳差值。

但是这种解决思路会碰到两个问题：

1、我们无法记录进程每条指令的时间戳。

2、进程切换是由操作系统的调度算法负责的，其他进程也可能会竞争CPU，或者内核还要处理中断，用户控制不了这些不相干的上下文切换。比方说，若内核决定在进程切换时转而去处理某个中断，那么上下文切换时间就会比预估的更长。

为克服上述两个障碍，我们可以在进程P1和P2之间构造一条数据通道（如管道），让P1作为初始发送方，P2作为接收方。一开始P2阻塞（睡眠）等待获取数据。P1执行时通过数据通道发送数据给P2，并试图获取P2的响应信息。由于此时P2还没有机会执行，因此P1收不到响应信息，继而被阻塞并释放CPU。

随之而来的就是上下文切换，任务调度器必须选择另一个进程执行。P2正好处于随时可执行的状态，因此也就顺理成章地成为任务调度器可选择执行的理想候选者。当P2执行时，P1和P2角色互换，P2成了发送方，而P1成了被阻塞的接收方。

在这里我们可以通过P1测量数据发送和接收反馈信息花费的时间T，T包含了P1发送数据和接收返回信息的时间、两次进程切换时间、P2接收数据和发送回馈信息的时间。通过总花费时间和进程发送接收数据的时间我们可以得到进程上下文切换花费的时间。

根据这个方法得到的结果只是个近似值（我们事先假定一旦P1发送数据完毕，P2就会被选中并执行，实际上这要取决于任务调度器的实现）。为了得到尽量精确的时间，我们可以重复测试过程多次，选取测得的最短上下文切换时间作为最终答案。


