---
author: 邹政华
comments: true
date: 2014-12-10
published: false 
tags: java
layout: post
title:  《java程序员修炼之道》－现代并发
categories: 读书 
---

java线程模型建立在两个基本概念之上：
1.共享的、默认可见的可变状态
2. 抢占式线程调度

我们可以从侧面思考一下这两个概念：
1. 所有线程可以很容易地共享同一进程的对象；
2. 能够引用这些对象的任何线程都可以修改这些对象；
3. 线程调度程序差不多任何时候都能在核心上调入或调出线程；
4. 必须能够调出运行时的方法，否则无限循环的方法会一直占用CPU；
然后这种不可预料的线程调度可能会导致方法"半途而废"，并出现状态不一致的对象。某一线程对数据做出修改时，会让其他线程无法见到本应可见的修改。为了缓解这些风险，java提出了最后一点要求。
> 为了保护脆弱的数据，对象可以被锁住

Java基于线程和锁的并发非常底层，并且一般都比较难用。为了解决这个问题，Java引入了一组并发类库java.util.concurrent。这个包中提供了一套编写并发呆梨的工具，很多程序员都觉得它比传统块结构并发原语易用。

java.util.concurrent的设计原则：
1. 安全性（并发类型安全性）
2. 活跃度
3. 性能
4. 重用性

安全性是指不管同时发生多少操作都能确保对象保持自相一致。如果一个对象系统具备这一特性，那它就是并发类型安全的。






