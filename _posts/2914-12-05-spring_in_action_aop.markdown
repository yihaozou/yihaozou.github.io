---
author: 邹政华
comments: true
date: 2014-12-05
published: true 
tags: Java
layout: post
title:  spring in action－AOP
categories: 读书 
---

 切面实现了横切关注点(跨越多个应用对象的逻辑)的模块化。

 AOP时面向对象编程的一个补充，通过AspectJ, 我们现在可以将之前分散在应用各处的行为放入可重用的模块中。

 描述切面的几个术语：

 - 通知(advice): 描述切面要完成的工作，以及何时执行这个工作
 - 连接点(Joinpoint): 应用执行过程中能够插入切面的一个点，切面代码可以利用这些点插入到应用的正常流程之中，并添加新的行为。
 - 切点(pointcut): 切点的定义会匹配通知所要织入的一个或多个连接点。可以使用明确的类和方法名称来指定这些切点，或利用正则表达式定义匹配的类和方法名来指定这些切点。
 - 切面(aspect): 通知和切点的结合，通知和切点共同定义了切面的工作、时间和地点。
 - 引入(introduction): 向现有的类添加新方法或属性。
 - 织入(weaving): 将切面应用到目标对象来创建$新的代理对象$的过程.




